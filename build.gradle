plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.12'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
}

group = 'toyproject'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '11'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.h2database:h2'

    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    //JUnit4 추가
    testImplementation("org.junit.vintage:junit-vintage-engine") {
        exclude group: "org.hamcrest", module: "hamcrest-core"
    }

    //openweatherApi 의존성 추가
    implementation 'com.squareup.okhttp3:okhttp'
    implementation 'com.fasterxml.jackson.core:jackson-databind'

    // Geocoder
    implementation 'com.google.maps:google-maps-services:2.1.2'

    // Spring RestTemplate
    implementation 'org.springframework.boot:spring-boot-starter-web-services'

    // JSON parsing
    implementation 'com.fasterxml.jackson.core:jackson-databind'

    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-hibernate5'

    //Querydsl 추가
    implementation 'com.querydsl:querydsl-jpa'
    annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jpa"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    //로그인 구현을 위한 Spring-security와 JWT 의존성 추가
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6:3.1.1.RELEASE'
    implementation 'io.jsonwebtoken:jjwt:0.9.1'

//    //타임리프 설정 추가
//    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
//    implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect'

//    annotationProcessor('org.projectlombok:lombok')
//    testAnnotationProcessor('org.projectlombok:lombok')
}

tasks.named('test') {
    useJUnitPlatform()
}

//Querydsl 추가, 자동 생성된 Q클래스 gradle clean으로 제거
clean {
    delete file('src/main/generated')
}